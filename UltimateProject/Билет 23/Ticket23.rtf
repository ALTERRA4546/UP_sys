{\rtf1\ansi\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset204 Calibri;}{\f1\fnil\fcharset0 Calibri;}{\f2\fnil Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\i\f0\fs22\lang1049\'c0\'ed\'ee\'ed\'e8\'ec\'ed\'fb\'e5 \'e8 \'e8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb: \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ea\'e0\'ed\'e0\'eb\'ee\'e2, \'ef\'f0\'e0\'e2\'e8\'eb\'e0 \'ee\'e1\'ec\'e5\'ed\'e0 \'f7\'e5\'f0\'e5\'e7 \'ea\'e0\'ed\'e0\'eb.\par
\'d1\'ee\'e7\'e4\'e0\'f2\'fc \'ef\'f0\'e8\'eb\'ee\'e6\'e5\'ed\'e8\'e5, \'f0\'e5\'e0\'eb\'e8\'e7\'f3\'fe\'f9\'e5\'e5 \'e2\'ee\'e7\'e2\'f0\'e0\'f9\'e5\'ed\'e8\'e5 \'f0\'e5\'f8\'e5\'ed\'e8\'ff \'ea\'e2\'e0\'e4\'f0\'e0\'f2\'ed\'fb\'f5 \'f3\'f0\'e0\'e2\'ed\'e5\'ed\'e8\'e9. \'c8\'f1\'f5\'ee\'e4\'ed\'fb\'e5 \'e4\'e0\'ed\'ed\'fb\'e5 \'e3\'e5\'ed\'e5\'f0\'e8\'f0\'f3\'fe\'f2\'f1\'ff \'e2 \'ec\'e5\'f2\'ee\'e4\'e5 \'e8 \'f0\'e5\'f8\'e5\'ed\'e8\'e5 \'ef\'f0\'ee\'e8\'f1\'f5\'ee\'e4\'e8\'f2 \'e2 \'ec\'e5\'f2\'ee\'e4\'e5\f1\lang1033 .\par
\par
\i0\f0\lang1049\'c0\'ed\'ee\'ed\'e8\'ec\'ed\'fb\'e5 \'e8 \'e8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb \b0\'e2 C# \'ee\'e1\'e5\'f1\'ef\'e5\'f7\'e8\'e2\'e0\'fe\'f2 \'ec\'e5\'e6\'ef\'f0\'ee\'f6\'e5\'f1\'f1\'ed\'ee\'e5 \'e2\'e7\'e0\'e8\'ec\'ee\'e4\'e5\'e9\'f1\'f2\'e2\'e8\'e5.\par
\b\'c0\'ed\'ee\'ed\'e8\'ec\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb \b0\'ee\'e1\'e5\'f1\'ef\'e5\'f7\'e8\'e2\'e0\'fe\'f2 \'ef\'e5\'f0\'e5\'e4\'e0\'f7\'f3 \'e4\'e0\'ed\'ed\'fb\'f5 \'ec\'e5\'e6\'e4\'f3 \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'e0\'ec\'e8 \'ed\'e0 \'eb\'ee\'ea\'e0\'eb\'fc\'ed\'ee\'ec \'ea\'ee\'ec\'ef\'fc\'fe\'f2\'e5\'f0\'e5. \'ce\'ed\'e8 \'f2\'f0\'e5\'e1\'f3\'fe\'f2 \'ec\'e5\'ed\'fc\'f8\'e5 \'f0\'e5\'f1\'f3\'f0\'f1\'ee\'e2, \'f7\'e5\'ec \'e8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb, \'ed\'ee \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'fe\'f2 \'ec\'e5\'ed\'fc\'f8\'e5 \'e2\'ee\'e7\'ec\'ee\'e6\'ed\'ee\'f1\'f2\'e5\'e9. \'c0\'ed\'ee\'ed\'e8\'ec\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb \'ff\'e2\'eb\'ff\'fe\'f2\'f1\'ff \'ee\'e4\'ed\'ee\'f1\'f2\'ee\'f0\'ee\'ed\'ed\'e8\'ec\'e8 \'e8 \'e8\'f5 \'ed\'e5\'eb\'fc\'e7\'ff \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'e2 \'f1\'e5\'f2\'e8. \'ce\'ed\'e8 \'ef\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'fe\'f2 \'f2\'ee\'eb\'fc\'ea\'ee \'ee\'e4\'e8\'ed \'fd\'ea\'e7\'e5\'ec\'ef\'eb\'ff\'f0 \'f1\'e5\'f0\'e2\'e5\'f0\'e0. 8 \'c4\'eb\'ff \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'e0\'ed\'ee\'ed\'e8\'ec\'ed\'fb\'f5 \'ea\'e0\'ed\'e0\'eb\'ee\'e2 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'fe\'f2\'f1\'ff \'ea\'eb\'e0\'f1\'f1\'fb AnonymousPipeServerStream \'e8 AnonymousPipeClientStream.\par
\b\'c8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb \b0\'ee\'e1\'e5\'f1\'ef\'e5\'f7\'e8\'e2\'e0\'fe\'f2 \'ef\'e5\'f0\'e5\'e4\'e0\'f7\'f3 \'e4\'e0\'ed\'ed\'fb\'f5 \'ec\'e5\'e6\'e4\'f3 \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'e0\'ec\'e8 \'e2 \'eb\'ee\'ea\'e0\'eb\'fc\'ed\'ee\'e9 \'f1\'e5\'f2\'e8. \'ce\'ed\'e8 \'ec\'ee\'e3\'f3\'f2 \'e1\'fb\'f2\'fc \'ee\'e4\'ed\'ee\'f1\'f2\'ee\'f0\'ee\'ed\'ed\'e8\'ec\'e8 \'e8\'eb\'e8 \'e4\'f3\'ef\'eb\'e5\'ea\'f1\'ed\'fb\'ec\'e8, \'ef\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'fe\'f2 \'f1\'e2\'ff\'e7\'fc \'ed\'e0 \'ee\'f1\'ed\'ee\'e2\'e5 \'f1\'ee\'ee\'e1\'f9\'e5\'ed\'e8\'e9 \'e8 \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'fe\'f2 \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'e8\'ec \'ea\'eb\'e8\'e5\'ed\'f2\'e0\'ec \'ee\'e4\'ed\'ee\'e2\'f0\'e5\'ec\'e5\'ed\'ed\'ee \'ef\'ee\'e4\'ea\'eb\'fe\'f7\'e0\'f2\'fc\'f1\'ff \'ea \'ee\'e4\'ed\'ee\'ec\'f3 \'f1\'e5\'f0\'e2\'e5\'f0\'ed\'ee\'ec\'f3 \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'f3 \'f7\'e5\'f0\'e5\'e7 \'ea\'e0\'ed\'e0\'eb \'f1 \'f2\'e5\'ec \'e6\'e5 \'e8\'ec\'e5\'ed\'e5\'ec. \'c2 .NET \'e8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb \'f0\'e5\'e0\'eb\'e8\'e7\'f3\'fe\'f2\'f1\'ff \'f1 \'ef\'ee\'ec\'ee\'f9\'fc\'fe \'ea\'eb\'e0\'f1\'f1\'ee\'e2 NamedPipeServerStream \'e8 NamedPipeClientStream.\par
\b\'cf\'f0\'e0\'e2\'e8\'eb\'e0 \'ee\'e1\'ec\'e5\'ed\'e0 \'f7\'e5\'f0\'e5\'e7 \'ea\'e0\'ed\'e0\'eb:\b0\par
\'d7\'f2\'e5\'ed\'e8\'e5: \'ef\'f0\'e8 \'f7\'f2\'e5\'ed\'e8\'e8 \'f7\'e8\'f1\'eb\'e0 \'e1\'e0\'e9\'f2, \'ec\'e5\'ed\'fc\'f8\'e5\'e3\'ee \'f7\'e5\'ec \'ed\'e0\'f5\'ee\'e4\'e8\'f2\'f1\'ff \'e2 \'ea\'e0\'ed\'e0\'eb\'e5, \'e2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'f2\'f1\'ff \'f2\'f0\'e5\'e1\'f3\'e5\'ec\'ee\'e5 \'f7\'e8\'f1\'eb\'ee \'e1\'e0\'e9\'f2\'ee\'e2, \'ee\'f1\'f2\'e0\'f2\'ee\'ea \'f1\'ee\'f5\'f0\'e0\'ed\'ff\'e5\'f2\'f1\'ff \'e4\'eb\'ff \'ef\'ee\'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e8\'f5 \'f7\'f2\'e5\'ed\'e8\'e9. \'cf\'f0\'e8 \'f7\'f2\'e5\'ed\'e8\'e8 \'f7\'e8\'f1\'eb\'e0 \'e1\'e0\'e9\'f2, \'e1\'ee\'eb\'fc\'f8\'e5\'e3\'ee \'f7\'e5\'ec \'ed\'e0\'f5\'ee\'e4\'e8\'f2\'f1\'ff \'e2 \'ea\'e0\'ed\'e0\'eb\'e5, \'e2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'f2\'f1\'ff \'e4\'ee\'f1\'f2\'f3\'ef\'ed\'ee\'e5 \'f7\'e8\'f1\'eb\'ee \'e1\'e0\'e9\'f2. \'c5\'f1\'eb\'e8 \'ea\'e0\'ed\'e0\'eb \'ef\'f3\'f1\'f2 \'e8 \'ed\'e8 \'ee\'e4\'e8\'ed \'ef\'f0\'ee\'f6\'e5\'f1\'f1 \'ed\'e5 \'ee\'f2\'ea\'f0\'fb\'eb \'e5\'e3\'ee \'ed\'e0 \'e7\'e0\'ef\'e8\'f1\'fc, \'f2\'ee \'ef\'f0\'e8 \'f7\'f2\'e5\'ed\'e8\'e8 \'e8\'e7 \'ea\'e0\'ed\'e0\'eb\'e0 \'e1\'f3\'e4\'e5\'f2 \'ef\'ee\'eb\'f3\'f7\'e5\'ed\'ee 0 \'e1\'e0\'e9\'f2\'ee\'e2 \f2\emdash  \f0\'f2\'ee \'e5\'f1\'f2\'fc \'ea\'ee\'ed\'e5\'f6 \'f4\'e0\'e9\'eb\'e0.\par
\'c7\'e0\'ef\'e8\'f1\'fc: \'e5\'f1\'eb\'e8 \'ef\'f0\'ee\'f6\'e5\'f1\'f1 \'ef\'fb\'f2\'e0\'e5\'f2\'f1\'ff \'e7\'e0\'ef\'e8\'f1\'e0\'f2\'fc \'e4\'e0\'ed\'ed\'fb\'e5 \'e2 \'ea\'e0\'ed\'e0\'eb, \'ed\'e5 \'ee\'f2\'ea\'f0\'fb\'f2\'fb\'e9 \'ed\'e8 \'ee\'e4\'ed\'e8\'ec \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'ee\'ec \'ed\'e0 \'f7\'f2\'e5\'ed\'e8\'e5, \'f2\'ee \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'f3 \'ee\'f2\'ef\'f0\'e0\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'f1\'e8\'e3\'ed\'e0\'eb SIGPIPE. \'c5\'f1\'eb\'e8 \'ed\'e5 \'f3\'f1\'f2\'e0\'ed\'ee\'e2\'eb\'e5\'ed\'e0 \'ee\'e1\'f0\'e0\'e1\'ee\'f2\'ea\'e0 \'f1\'e8\'e3\'ed\'e0\'eb\'e0, \'f2\'ee \'ef\'f0\'ee\'f6\'e5\'f1\'f1 \'e7\'e0\'e2\'e5\'f0\'f8\'e0\'e5\'f2\'f1\'ff, \'e2 \'ef\'f0\'ee\'f2\'e8\'e2\'ed\'ee\'ec \'f1\'eb\'f3\'f7\'e0\'e5 \'e2\'fb\'e7\'ee\'e2 write() \'e2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'f2 -1 \'f1 \'f3\'f1\'f2\'e0\'ed\'ee\'e2\'ea\'ee\'e9 \'ee\'f8\'e8\'e1\'ea\'e8 EPIPE.\par
\par
\b\'c0\'ed\'ee\'ed\'e8\'ec\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb (Pipes):\b0\par
\'c0\'ed\'ee\'ed\'e8\'ec\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb \'ee\'e1\'e5\'f1\'ef\'e5\'f7\'e8\'e2\'e0\'fe\'f2 \'ee\'e4\'ed\'ee\'ed\'e0\'ef\'f0\'e0\'e2\'eb\'e5\'ed\'ed\'f3\'fe \'f1\'e2\'ff\'e7\'fc \'ec\'e5\'e6\'e4\'f3 \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'e0\'ec\'e8, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'ed\'e0\'f5\'ee\'e4\'ff\'f2\'f1\'ff \'e2 \'ee\'f2\'ed\'ee\'f8\'e5\'ed\'e8\'ff\'f5 \'f0\'ee\'e4\'e8\'f2\'e5\'eb\'fc-\'ef\'ee\'f2\'ee\'ec\'ee\'ea. \'dd\'f2\'ee \'ee\'e7\'ed\'e0\'f7\'e0\'e5\'f2, \'f7\'f2\'ee \'ea\'e0\'ed\'e0\'eb \'f1\'ee\'e7\'e4\'e0\'e5\'f2\'f1\'ff \'f0\'ee\'e4\'e8\'f2\'e5\'eb\'fc\'f1\'ea\'e8\'ec \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'ee\'ec, \'e0 \'e7\'e0\'f2\'e5\'ec \'e5\'e3\'ee \'e4\'e5\'f1\'ea\'f0\'e8\'ef\'f2\'ee\'f0\'fb \'ef\'e5\'f0\'e5\'e4\'e0\'fe\'f2\'f1\'ff \'e4\'ee\'f7\'e5\'f0\'ed\'e5\'ec\'f3 \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'f3. \'c0\'ed\'ee\'ed\'e8\'ec\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb \'ee\'e1\'fb\'f7\'ed\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'fe\'f2\'f1\'ff \'e4\'eb\'ff \'ef\'e5\'f0\'e5\'ed\'e0\'ef\'f0\'e0\'e2\'eb\'e5\'ed\'e8\'ff \'e2\'e2\'ee\'e4\'e0 \'e8\'eb\'e8 \'e2\'fb\'e2\'ee\'e4\'e0 \'ec\'e5\'e6\'e4\'f3 \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'e0\'ec\'e8.\par
\b\'d0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'e2 C#:\b0\par
\'c2 .NET \'e4\'eb\'ff \'f0\'e0\'e1\'ee\'f2\'fb \'f1 \'e0\'ed\'ee\'ed\'e8\'ec\'ed\'fb\'ec\'e8 \'ea\'e0\'ed\'e0\'eb\'e0\'ec\'e8 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'fe\'f2\'f1\'ff \'ea\'eb\'e0\'f1\'f1\'fb \'e8\'e7 \'ef\'f0\'ee\'f1\'f2\'f0\'e0\'ed\'f1\'f2\'e2\'e0 \'e8\'ec\'e5\'ed System.IO.Pipes:\par
AnonymousPipeServerStream: \'cf\'f0\'e5\'e4\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2 \'ea\'ee\'ed\'e5\'f6 \'f1\'e5\'f0\'e2\'e5\'f0\'e0 (\'ee\'f2\'ea\'f3\'e4\'e0 \'e4\'e0\'ed\'ed\'fb\'e5 \'ef\'e8\'f8\'f3\'f2\'f1\'ff).\par
AnonymousPipeClientStream: \'cf\'f0\'e5\'e4\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2 \'ea\'ee\'ed\'e5\'f6 \'ea\'eb\'e8\'e5\'ed\'f2\'e0 (\'ee\'f2\'ea\'f3\'e4\'e0 \'e4\'e0\'ed\'ed\'fb\'e5 \'f7\'e8\'f2\'e0\'fe\'f2\'f1\'ff).\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 (\'f0\'ee\'e4\'e8\'f2\'e5\'eb\'fc\'f1\'ea\'e8\'e9 \'ef\'f0\'ee\'f6\'e5\'f1\'f1 \'ef\'e8\'f8\'e5\'f2, \'e4\'ee\'f7\'e5\'f0\'ed\'e8\'e9 \'f7\'e8\'f2\'e0\'e5\'f2):\b0\par
using System;\par
using System.IO;\par
using System.IO.Pipes;\par
using System.Text;\par
using System.Diagnostics;\par
public class AnonymousPipesExample\par
\{\par
    public static void Main(string[] args)\par
    \{\par
        // \'d1\'ee\'e7\'e4\'e0\'e5\'ec \'e0\'ed\'ee\'ed\'e8\'ec\'ed\'fb\'e9 \'ea\'e0\'ed\'e0\'eb (\'f1\'e5\'f0\'e2\'e5\'f0\'ed\'fb\'e9 \'ea\'ee\'ed\'e5\'f6)\par
        using (AnonymousPipeServerStream serverPipe = new AnonymousPipeServerStream(PipeDirection.Out, HandleInheritability.Inheritable))\par
        \{\par
            // \'cf\'ee\'eb\'f3\'f7\'e0\'e5\'ec \'e8\'ec\'ff \'ea\'e0\'ed\'e0\'eb\'e0 \'e4\'eb\'ff \'ef\'e5\'f0\'e5\'e4\'e0\'f7\'e8 \'e4\'ee\'f7\'e5\'f0\'ed\'e5\'ec\'f3 \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'f3\par
            string serverHandle = serverPipe.GetClientHandleAsString();\par
            // \'d1\'ee\'e7\'e4\'e0\'e5\'ec \'e8 \'e7\'e0\'ef\'f3\'f1\'ea\'e0\'e5\'ec \'e4\'ee\'f7\'e5\'f0\'ed\'e8\'e9 \'ef\'f0\'ee\'f6\'e5\'f1\'f1\par
            ProcessStartInfo startInfo = new ProcessStartInfo("ChildProcess.exe"); // \'d3\'ea\'e0\'e6\'e8\'f2\'e5 \'ef\'f3\'f2\'fc \'ea \'e4\'ee\'f7\'e5\'f0\'ed\'e5\'ec\'f3 \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'f3\par
            startInfo.Arguments = serverHandle;\par
            startInfo.UseShellExecute = false;\par
            startInfo.RedirectStandardOutput = true;\par
            using (Process childProcess = Process.Start(startInfo))\par
            \{\par
                if (childProcess != null)\par
                \{\par
                     // \'c7\'e0\'ea\'f0\'fb\'e2\'e0\'e5\'ec \'e4\'e5\'f1\'ea\'f0\'e8\'ef\'f2\'ee\'f0 \'ea\'e0\'ed\'e0\'eb\'e0 \'e4\'eb\'ff \'f0\'ee\'e4\'e8\'f2\'e5\'eb\'fc\'f1\'ea\'ee\'e3\'ee \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'e0 (\'f2\'ee\'eb\'fc\'ea\'ee \'e4\'eb\'ff \'f1\'e5\'f0\'e2\'e5\'f0\'e0)\par
                     serverPipe.DisposeLocalCopyOfClientHandle();\par
                    // \'cf\'e8\'f8\'e5\'ec \'e4\'e0\'ed\'ed\'fb\'e5 \'e2 \'ea\'e0\'ed\'e0\'eb\par
                    using (StreamWriter writer = new StreamWriter(serverPipe, Encoding.UTF8))\par
                    \{\par
                        writer.WriteLine("\'cf\'f0\'e8\'e2\'e5\'f2 \'ee\'f2 \'f0\'ee\'e4\'e8\'f2\'e5\'eb\'fc\'f1\'ea\'ee\'e3\'ee \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'e0!");\par
                        writer.Flush();\par
                    \}\par
                    childProcess.WaitForExit(); // \'ce\'e6\'e8\'e4\'e0\'e5\'ec \'e7\'e0\'e2\'e5\'f0\'f8\'e5\'ed\'e8\'ff \'e4\'ee\'f7\'e5\'f0\'ed\'e5\'e3\'ee \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'e0\par
                     Console.WriteLine("Parent process finished.");\par
                 \}\par
                 else\par
                 \{\par
                     Console.WriteLine("Failed to start child process.");\par
                 \}\par
            \}\par
        \}\par
    \}\par
\}\par
\b\'c4\'ee\'f7\'e5\'f0\'ed\'e8\'e9 \'ef\'f0\'ee\'f6\'e5\'f1\'f1 (ChildProcess.exe):\b0\par
using System;\par
using System.IO;\par
using System.IO.Pipes;\par
using System.Text;\par
public class ChildProcess\par
\{\par
    public static void Main(string[] args)\par
    \{\par
        if (args.Length == 1)\par
        \{\par
            // \'cf\'ee\'eb\'f3\'f7\'e0\'e5\'ec \'e8\'ec\'ff \'ea\'e0\'ed\'e0\'eb\'e0 \'e8\'e7 \'e0\'f0\'e3\'f3\'ec\'e5\'ed\'f2\'ee\'e2 \'ea\'ee\'ec\'e0\'ed\'e4\'ed\'ee\'e9 \'f1\'f2\'f0\'ee\'ea\'e8\par
            string clientHandle = args[0];\par
            // \'d1\'ee\'e7\'e4\'e0\'e5\'ec \'ea\'eb\'e8\'e5\'ed\'f2\'f1\'ea\'e8\'e9 \'ea\'ee\'ed\'e5\'f6 \'ea\'e0\'ed\'e0\'eb\'e0\par
            using (AnonymousPipeClientStream clientPipe = new AnonymousPipeClientStream(PipeDirection.In, clientHandle))\par
            \{\par
                // \'d7\'e8\'f2\'e0\'e5\'ec \'e4\'e0\'ed\'ed\'fb\'e5 \'e8\'e7 \'ea\'e0\'ed\'e0\'eb\'e0\par
                using (StreamReader reader = new StreamReader(clientPipe, Encoding.UTF8))\par
                \{\par
                    string message = reader.ReadLine();\par
                    Console.WriteLine("Child process received: " + message);\par
                \}\par
            \}\par
        \}\par
        else\par
        \{\par
             Console.WriteLine("Error: Invalid number of arguments");\par
        \}\par
        Console.WriteLine("Child process finished.");\par
     \}\par
\}\par
\b\'ce\'e1\'fa\'ff\'f1\'ed\'e5\'ed\'e8\'e5:\b0\par
\b\'d0\'ee\'e4\'e8\'f2\'e5\'eb\'fc\'f1\'ea\'e8\'e9 \'ef\'f0\'ee\'f6\'e5\'f1\'f1:\b0\par
\'d1\'ee\'e7\'e4\'e0\'e5\'f2 AnonymousPipeServerStream.\par
\'cf\'ee\'eb\'f3\'f7\'e0\'e5\'f2 \'f1\'f2\'f0\'ee\'ea\'ee\'e2\'ee\'e5 \'ef\'f0\'e5\'e4\'f1\'f2\'e0\'e2\'eb\'e5\'ed\'e8\'e5 \'e4\'e5\'f1\'ea\'f0\'e8\'ef\'f2\'ee\'f0\'e0 \'ea\'eb\'e8\'e5\'ed\'f2\'e0 (GetClientHandleAsString()).\par
\'c7\'e0\'ef\'f3\'f1\'ea\'e0\'e5\'f2 \'e4\'ee\'f7\'e5\'f0\'ed\'e8\'e9 \'ef\'f0\'ee\'f6\'e5\'f1\'f1, \'ef\'e5\'f0\'e5\'e4\'e0\'e2\'e0\'ff \'e5\'ec\'f3 \'e4\'e5\'f1\'ea\'f0\'e8\'ef\'f2\'ee\'f0 \'ea\'e0\'ed\'e0\'eb\'e0 \'ea\'e0\'ea \'e0\'f0\'e3\'f3\'ec\'e5\'ed\'f2 \'ea\'ee\'ec\'e0\'ed\'e4\'ed\'ee\'e9 \'f1\'f2\'f0\'ee\'ea\'e8.\par
\'c7\'e0\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'f2 \'f1\'ee\'ee\'e1\'f9\'e5\'ed\'e8\'e5 \'e2 \'ea\'e0\'ed\'e0\'eb \'f7\'e5\'f0\'e5\'e7 StreamWriter.\par
\b\'c4\'ee\'f7\'e5\'f0\'ed\'e8\'e9 \'ef\'f0\'ee\'f6\'e5\'f1\'f1:\b0\par
\'cf\'ee\'eb\'f3\'f7\'e0\'e5\'f2 \'e4\'e5\'f1\'ea\'f0\'e8\'ef\'f2\'ee\'f0 \'ea\'e0\'ed\'e0\'eb\'e0 \'e8\'e7 \'e0\'f0\'e3\'f3\'ec\'e5\'ed\'f2\'ee\'e2 \'ea\'ee\'ec\'e0\'ed\'e4\'ed\'ee\'e9 \'f1\'f2\'f0\'ee\'ea\'e8.\par
\'d1\'ee\'e7\'e4\'e0\'e5\'f2 AnonymousPipeClientStream, \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'ff \'e4\'e5\'f1\'ea\'f0\'e8\'ef\'f2\'ee\'f0.\par
\'d7\'e8\'f2\'e0\'e5\'f2 \'f1\'ee\'ee\'e1\'f9\'e5\'ed\'e8\'e5 \'e8\'e7 \'ea\'e0\'ed\'e0\'eb\'e0 \'f7\'e5\'f0\'e5\'e7 StreamReader.\par
\b\'cf\'f0\'e0\'e2\'e8\'eb\'e0 \'ee\'e1\'ec\'e5\'ed\'e0 \'f7\'e5\'f0\'e5\'e7 \'e0\'ed\'ee\'ed\'e8\'ec\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb:\b0\par
\'ce\'e4\'ed\'ee\'ed\'e0\'ef\'f0\'e0\'e2\'eb\'e5\'ed\'ed\'ee\'f1\'f2\'fc: \'c4\'e0\'ed\'ed\'fb\'e5 \'ef\'e5\'f0\'e5\'e4\'e0\'fe\'f2\'f1\'ff \'f2\'ee\'eb\'fc\'ea\'ee \'e2 \'ee\'e4\'ed\'ee\'ec \'ed\'e0\'ef\'f0\'e0\'e2\'eb\'e5\'ed\'e8\'e8 (\'ee\'f2 \'f1\'e5\'f0\'e2\'e5\'f0\'e0 \'ea \'ea\'eb\'e8\'e5\'ed\'f2\'f3).\par
\'d0\'ee\'e4\'e8\'f2\'e5\'eb\'fc-\'ef\'ee\'f2\'ee\'ec\'ee\'ea: \'c0\'ed\'ee\'ed\'e8\'ec\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb \'f1\'ee\'e7\'e4\'e0\'fe\'f2\'f1\'ff \'f0\'ee\'e4\'e8\'f2\'e5\'eb\'e5\'ec \'e8 \'ef\'e5\'f0\'e5\'e4\'e0\'fe\'f2\'f1\'ff \'e4\'ee\'f7\'e5\'f0\'ed\'e8\'ec \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'e0\'ec.\par
\'cf\'f0\'ee\'f6\'e5\'f1\'f1\'fb: \'ca\'e0\'ed\'e0\'eb\'fb \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'fe\'f2\'f1\'ff \'e4\'eb\'ff \'f1\'e2\'ff\'e7\'e8 \'ec\'e5\'e6\'e4\'f3 \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'e0\'ec\'e8.\par
\'ce\'e6\'e8\'e4\'e0\'ed\'e8\'e5: \'c2 \'ef\'f0\'e8\'ec\'e5\'f0\'e5 \'e2\'fb\'f8\'e5, \'f0\'ee\'e4\'e8\'f2\'e5\'eb\'fc\'f1\'ea\'e8\'e9 \'ef\'f0\'ee\'f6\'e5\'f1\'f1 \'ee\'e6\'e8\'e4\'e0\'e5\'f2 \'e7\'e0\'e2\'e5\'f0\'f8\'e5\'ed\'e8\'ff \'e4\'ee\'f7\'e5\'f0\'ed\'e5\'e3\'ee, \'f7\'f2\'ee\'e1\'fb \'e8\'e7\'e1\'e5\'e6\'e0\'f2\'fc \'ef\'f0\'ee\'e1\'eb\'e5\'ec \'f1 \'f0\'e5\'f1\'f3\'f0\'f1\'e0\'ec\'e8.\par
\'c7\'e0\'ea\'f0\'fb\'f2\'e8\'e5: \'c2\'e0\'e6\'ed\'ee \'e7\'e0\'ea\'f0\'fb\'e2\'e0\'f2\'fc \'f1\'f2\'f0\'e8\'ec\'fb \'ef\'ee\'f1\'eb\'e5 \'e7\'e0\'e2\'e5\'f0\'f8\'e5\'ed\'e8\'ff \'f0\'e0\'e1\'ee\'f2\'fb, \'f7\'f2\'ee\'e1\'fb \'f0\'e5\'f1\'f3\'f0\'f1\'fb \'ee\'f1\'e2\'ee\'e1\'ee\'e6\'e4\'e0\'eb\'e8\'f1\'fc.\par
\b\'c8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb (Named Pipes):\b0\par
\'c8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb \'ee\'e1\'e5\'f1\'ef\'e5\'f7\'e8\'e2\'e0\'fe\'f2 \'e4\'e2\'f3\'ed\'e0\'ef\'f0\'e0\'e2\'eb\'e5\'ed\'ed\'f3\'fe \'f1\'e2\'ff\'e7\'fc \'ec\'e5\'e6\'e4\'f3 \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'e0\'ec\'e8, \'e4\'e0\'e6\'e5 \'e5\'f1\'eb\'e8 \'ee\'ed\'e8 \'ed\'e5 \'ed\'e0\'f5\'ee\'e4\'ff\'f2\'f1\'ff \'e2 \'ee\'f2\'ed\'ee\'f8\'e5\'ed\'e8\'ff\'f5 \'f0\'ee\'e4\'e8\'f2\'e5\'eb\'fc-\'ef\'ee\'f2\'ee\'ec\'ee\'ea. \'c8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb \'e8\'e4\'e5\'ed\'f2\'e8\'f4\'e8\'f6\'e8\'f0\'f3\'fe\'f2\'f1\'ff \'ef\'ee \'e8\'ec\'e5\'ed\'e8, \'e8 \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'fb \'ec\'ee\'e3\'f3\'f2 \'ef\'ee\'e4\'ea\'eb\'fe\'f7\'e0\'f2\'fc\'f1\'ff \'ea \'ea\'e0\'ed\'e0\'eb\'f3, \'e7\'ed\'e0\'ff \'e5\'e3\'ee \'e8\'ec\'ff. \'dd\'f2\'ee \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'ee\'e1\'ec\'e5\'ed\'e8\'e2\'e0\'f2\'fc\'f1\'ff \'e4\'e0\'ed\'ed\'fb\'ec\'e8 \'ec\'e5\'e6\'e4\'f3 \'ef\'f0\'e8\'eb\'ee\'e6\'e5\'ed\'e8\'ff\'ec\'e8, \'ed\'e0\'f5\'ee\'e4\'ff\'f9\'e8\'ec\'e8\'f1\'ff \'ed\'e0 \'f0\'e0\'e7\'ed\'fb\'f5 \'f3\'f0\'ee\'e2\'ed\'ff\'f5 (\'ed\'e0\'ef\'f0\'e8\'ec\'e5\'f0, \'ef\'f0\'ee\'f6\'e5\'f1\'f1-\'f1\'e5\'f0\'e2\'e5\'f0 \'e8 \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'ee\'e2-\'ea\'eb\'e8\'e5\'ed\'f2\'ee\'e2).\par
\b\'d0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'e2 C#:\b0\par
\'c2 .NET \'e4\'eb\'ff \'f0\'e0\'e1\'ee\'f2\'fb \'f1 \'e8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'ed\'fb\'ec\'e8 \'ea\'e0\'ed\'e0\'eb\'e0\'ec\'e8 \'f2\'e0\'ea\'e6\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'fe\'f2\'f1\'ff \'ea\'eb\'e0\'f1\'f1\'fb \'e8\'e7 \'ef\'f0\'ee\'f1\'f2\'f0\'e0\'ed\'f1\'f2\'e2\'e0 \'e8\'ec\'e5\'ed System.IO.Pipes:\par
NamedPipeServerStream: \'cf\'f0\'e5\'e4\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2 \'ea\'ee\'ed\'e5\'f6 \'f1\'e5\'f0\'e2\'e5\'f0\'e0 (\'ee\'e6\'e8\'e4\'e0\'e5\'f2 \'ef\'ee\'e4\'ea\'eb\'fe\'f7\'e5\'ed\'e8\'ff \'ea\'eb\'e8\'e5\'ed\'f2\'ee\'e2).\par
NamedPipeClientStream: \'cf\'f0\'e5\'e4\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2 \'ea\'ee\'ed\'e5\'f6 \'ea\'eb\'e8\'e5\'ed\'f2\'e0 (\'ef\'ee\'e4\'ea\'eb\'fe\'f7\'e0\'e5\'f2\'f1\'ff \'ea \'f1\'e5\'f0\'e2\'e5\'f0\'f3).\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 (\'f1\'e5\'f0\'e2\'e5\'f0\'ed\'fb\'e9 \'ef\'f0\'ee\'f6\'e5\'f1\'f1 \'e8 \'ea\'eb\'e8\'e5\'ed\'f2\'f1\'ea\'e8\'e9 \'ef\'f0\'ee\'f6\'e5\'f1\'f1):\b0\par
\b\'d1\'e5\'f0\'e2\'e5\'f0\'ed\'fb\'e9 \'ef\'f0\'ee\'f6\'e5\'f1\'f1 (NamedPipeServer.exe):\b0\par
using System;\par
using System.IO;\par
using System.IO.Pipes;\par
using System.Text;\par
public class NamedPipeServer\par
\{\par
    public static void Main(string[] args)\par
    \{\par
        // \'d1\'ee\'e7\'e4\'e0\'e5\'ec \'e8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'ed\'fb\'e9 \'ea\'e0\'ed\'e0\'eb (\'f1\'e5\'f0\'e2\'e5\'f0)\par
        using (NamedPipeServerStream serverPipe = new NamedPipeServerStream("my_pipe", PipeDirection.InOut, 1, PipeTransmissionMode.Byte, PipeOptions.Asynchronous))\par
        \{\par
             Console.WriteLine("Waiting for client...");\par
             serverPipe.WaitForConnection();\par
             Console.WriteLine("Client connected!");\par
            try\par
            \{\par
                using (StreamReader reader = new StreamReader(serverPipe, Encoding.UTF8))\par
                using (StreamWriter writer = new StreamWriter(serverPipe, Encoding.UTF8))\par
                \{\par
                    string messageFromClient;\par
                    while ((messageFromClient = reader.ReadLine()) != null)\par
                    \{\par
                         Console.WriteLine("Received from client: " + messageFromClient);\par
                         string response = "Hello, client! Received: " + messageFromClient;\par
                         writer.WriteLine(response);\par
                         writer.Flush();\par
                         if (messageFromClient == "exit")\{\par
                             break;\par
                         \}\par
                    \}\par
                 \}\par
            \}\par
            catch (Exception ex)\par
            \{\par
              Console.WriteLine($"Error: \{ex.Message\}");\par
            \}\par
         \}\par
         Console.WriteLine("Server finished.");\par
     \}\par
\}\par
\b\'ca\'eb\'e8\'e5\'ed\'f2\'f1\'ea\'e8\'e9 \'ef\'f0\'ee\'f6\'e5\'f1\'f1 (NamedPipeClient.exe):\b0\par
using System;\par
using System.IO;\par
using System.IO.Pipes;\par
using System.Text;\par
public class NamedPipeClient\par
\{\par
    public static void Main(string[] args)\par
    \{\par
        // \'d1\'ee\'e7\'e4\'e0\'e5\'ec \'e8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'ed\'fb\'e9 \'ea\'e0\'ed\'e0\'eb (\'ea\'eb\'e8\'e5\'ed\'f2)\par
        using (NamedPipeClientStream clientPipe = new NamedPipeClientStream(".", "my_pipe", PipeDirection.InOut, PipeOptions.Asynchronous))\par
        \{\par
             Console.WriteLine("Connecting to server...");\par
             clientPipe.Connect(5000); // Timeout 5 seconds\par
             Console.WriteLine("Connected to server!");\par
            try\par
            \{\par
               using (StreamReader reader = new StreamReader(clientPipe, Encoding.UTF8))\par
                using (StreamWriter writer = new StreamWriter(clientPipe, Encoding.UTF8))\par
                 \{\par
                   while(true)\par
                   \{\par
                      Console.Write("Enter message to send (or 'exit' to quit): ");\par
                      string messageToSend = Console.ReadLine();\par
                      writer.WriteLine(messageToSend);\par
                      writer.Flush();\par
                      if (messageToSend == "exit")\{\par
                        break;\par
                      \}\par
                     string responseFromServer = reader.ReadLine();\par
                     Console.WriteLine($"Received from server: \{responseFromServer\}");\par
                   \}\par
                \}\par
            \}\par
            catch (TimeoutException)\par
            \{\par
                Console.WriteLine("Connection timed out.");\par
            \}\par
            catch (Exception ex)\par
            \{\par
                Console.WriteLine($"Error: \{ex.Message\}");\par
            \}\par
        \}\par
        Console.WriteLine("Client finished.");\par
    \}\par
\}\par
\b\'ce\'e1\'fa\'ff\'f1\'ed\'e5\'ed\'e8\'e5:\b0\par
\b\'d1\'e5\'f0\'e2\'e5\'f0\'ed\'fb\'e9 \'ef\'f0\'ee\'f6\'e5\'f1\'f1:\b0\par
\'d1\'ee\'e7\'e4\'e0\'e5\'f2 NamedPipeServerStream, \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'ff \'e8\'ec\'ff \'ea\'e0\'ed\'e0\'eb\'e0 (\ldblquote my_pipe\rdblquote ).\par
\'ce\'e6\'e8\'e4\'e0\'e5\'f2 \'ef\'ee\'e4\'ea\'eb\'fe\'f7\'e5\'ed\'e8\'ff \'ea\'eb\'e8\'e5\'ed\'f2\'e0 (WaitForConnection()).\par
\'d7\'e8\'f2\'e0\'e5\'f2 \'f1\'ee\'ee\'e1\'f9\'e5\'ed\'e8\'ff \'ee\'f2 \'ea\'eb\'e8\'e5\'ed\'f2\'e0 \'e8 \'ee\'f2\'ef\'f0\'e0\'e2\'eb\'ff\'e5\'f2 \'ee\'f2\'e2\'e5\'f2\'fb \'e2 \'f6\'e8\'ea\'eb\'e5.\par
\b\'ca\'eb\'e8\'e5\'ed\'f2\'f1\'ea\'e8\'e9 \'ef\'f0\'ee\'f6\'e5\'f1\'f1:\b0\par
\'d1\'ee\'e7\'e4\'e0\'e5\'f2 NamedPipeClientStream, \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'ff \'e8\'ec\'ff \'ea\'e0\'ed\'e0\'eb\'e0 (\ldblquote my_pipe\rdblquote ).\par
\'cf\'fb\'f2\'e0\'e5\'f2\'f1\'ff \'ef\'ee\'e4\'ea\'eb\'fe\'f7\'e8\'f2\'fc\'f1\'ff \'ea \'f1\'e5\'f0\'e2\'e5\'f0\'f3 (Connect(5000) - \'f2\'e0\'e9\'ec\'e0\'f3\'f2 5 \'f1\'e5\'ea\'f3\'ed\'e4).\par
\'ce\'f2\'ef\'f0\'e0\'e2\'eb\'ff\'e5\'f2 \'f1\'ee\'ee\'e1\'f9\'e5\'ed\'e8\'ff \'f1\'e5\'f0\'e2\'e5\'f0\'f3 \'e8 \'ef\'ee\'eb\'f3\'f7\'e0\'e5\'f2 \'ee\'f2\'e2\'e5\'f2\'fb \'e2 \'f6\'e8\'ea\'eb\'e5.\par
\b\'cf\'f0\'e0\'e2\'e8\'eb\'e0 \'ee\'e1\'ec\'e5\'ed\'e0 \'f7\'e5\'f0\'e5\'e7 \'e8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'ed\'fb\'e5 \'ea\'e0\'ed\'e0\'eb\'fb:\b0\par
\'c4\'e2\'f3\'ed\'e0\'ef\'f0\'e0\'e2\'eb\'e5\'ed\'ed\'ee\'f1\'f2\'fc: \'c4\'e0\'ed\'ed\'fb\'e5 \'ef\'e5\'f0\'e5\'e4\'e0\'fe\'f2\'f1\'ff \'e2 \'ee\'e1\'ee\'e8\'f5 \'ed\'e0\'ef\'f0\'e0\'e2\'eb\'e5\'ed\'e8\'ff\'f5.\par
\'cf\'f0\'ee\'e8\'e7\'e2\'ee\'eb\'fc\'ed\'ee\'e5 \'e2\'e7\'e0\'e8\'ec\'ee\'e4\'e5\'e9\'f1\'f2\'e2\'e8\'e5: \'cf\'f0\'ee\'f6\'e5\'f1\'f1\'fb \'ec\'ee\'e3\'f3\'f2 \'ee\'e1\'ec\'e5\'ed\'e8\'e2\'e0\'f2\'fc\'f1\'ff \'e4\'e0\'ed\'ed\'fb\'ec\'e8 \'ed\'e5\'e7\'e0\'e2\'e8\'f1\'e8\'ec\'ee \'ee\'f2 \'ee\'f2\'ed\'ee\'f8\'e5\'ed\'e8\'e9 \'f0\'ee\'e4\'e8\'f2\'e5\'eb\'fc-\'ef\'ee\'f2\'ee\'ec\'ee\'ea.\par
\'c8\'ec\'ff: \'ca\'e0\'ed\'e0\'eb\'fb \'e8\'e4\'e5\'ed\'f2\'e8\'f4\'e8\'f6\'e8\'f0\'f3\'fe\'f2\'f1\'ff \'ef\'ee \'e8\'ec\'e5\'ed\'e8, \'f7\'f2\'ee \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'e4\'f0\'f3\'e3\'e8\'ec \'ef\'f0\'ee\'f6\'e5\'f1\'f1\'e0\'ec \'ef\'ee\'e4\'ea\'eb\'fe\'f7\'e0\'f2\'fc\'f1\'ff \'ea \'ed\'e8\'ec.\par
\'cd\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'ea\'eb\'e8\'e5\'ed\'f2\'ee\'e2: \'d1\'e5\'f0\'e2\'e5\'f0 \'ec\'ee\'e6\'e5\'f2 \'ef\'f0\'e8\'ed\'e8\'ec\'e0\'f2\'fc \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'ea\'eb\'e8\'e5\'ed\'f2\'ee\'e2, \'e2 \'e7\'e0\'e2\'e8\'f1\'e8\'ec\'ee\'f1\'f2\'e8 \'ee\'f2 \'ed\'e0\'f1\'f2\'f0\'ee\'e9\'ea\'e8.\par
\'c1\'eb\'ee\'ea\'e8\'f0\'ee\'e2\'ea\'e0: \'ce\'ef\'e5\'f0\'e0\'f6\'e8\'e8 \'f7\'f2\'e5\'ed\'e8\'ff \'e8 \'e7\'e0\'ef\'e8\'f1\'e8 \'ec\'ee\'e3\'f3\'f2 \'e1\'eb\'ee\'ea\'e8\'f0\'ee\'e2\'e0\'f2\'fc \'ef\'ee\'f2\'ee\'ea, \'ef\'ee\'ea\'e0 \'ea\'e0\'ed\'e0\'eb \'ed\'e5 \'e1\'f3\'e4\'e5\'f2 \'e4\'ee\'f1\'f2\'f3\'ef\'e5\'ed (\'e0\'f1\'e8\'ed\'f5\'f0\'ee\'ed\'ed\'fb\'e5 \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'e8 \'ec\'ee\'e3\'f3\'f2 \'ef\'ee\'ec\'ee\'f7\'fc \'e8\'e7\'e1\'e5\'e6\'e0\'f2\'fc \'fd\'f2\'ee\'e3\'ee).\par
\'ce\'e6\'e8\'e4\'e0\'ed\'e8\'e5: \'ca\'eb\'e8\'e5\'ed\'f2\'f1\'ea\'e8\'e9 \'ef\'f0\'ee\'f6\'e5\'f1\'f1 \'ec\'ee\'e6\'e5\'f2 \'f3\'f1\'f2\'e0\'ed\'ee\'e2\'e8\'f2\'fc \'f2\'e0\'e9\'ec\'e0\'f3\'f2 \'e4\'eb\'ff \'ee\'e6\'e8\'e4\'e0\'ed\'e8\'ff \'ef\'ee\'e4\'ea\'eb\'fe\'f7\'e5\'ed\'e8\'ff \'ea \'f1\'e5\'f0\'e2\'e5\'f0\'f3.\b\i\f1\lang9\par
}
 